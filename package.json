{
  "name": "prixagent-saas",
  "version": "1.0.0",
  "description": "Plataforma SaaS de Agentes de IA Conversacional para Llamadas TelefÃ³nicas",
  "private": true,
  "type": "module",
  "repository": {
    "type": "git",
    "url": "https://github.com/prixagent/saas-platform.git"
  },
  "homepage": "https://agent.prixcenter.com",
  "workspaces": [
    "apps/*"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:api\" \"npm run dev:client\" \"npm run dev:manager\" \"npm run dev:agency\" \"npm run dev:landing\"",
    "dev:api": "cd apps/api && npm run start:dev",
    "dev:client": "cd apps/client-dashboard && npm run dev",
    "dev:manager": "cd apps/admin-dashboard && npm run dev",
    "dev:agency": "cd apps/admin-dashboard && npm run dev:agency",
    "dev:landing": "cd apps/landing-page && npm run dev",
    "dev:api-only": "cd apps/api && npm run start:dev",
    "dev:client-only": "cd apps/client-dashboard && npm run dev",
    "dev:manager-only": "cd apps/admin-dashboard && npm run dev",
    "dev:landing-only": "cd apps/landing-page && npm run dev",
    "lint:check": "node scripts/lint-optimized.js",
    "format:check": "prettier --check .",
    "build": "npm run build:api && npm run build:client && npm run build:manager && npm run build:agency && npm run build:landing",
    "build:optimized": "node scripts/optimize-build.js",
    "build:simple": "node scripts/simple-build.js",
    "clean:deps": "node scripts/clean-dependencies.js",
    "install:prod": "node scripts/install-production-deps.js",
    "security:audit": "node scripts/security-audit.js",
    "eliminate:warnings": "node scripts/eliminate-warnings.js",
    "eliminate:vulnerabilities": "node scripts/eliminate-security-vulnerabilities.js",
    "fix:security": "node scripts/fix-security-vulnerabilities.js",
    "fix:security:v2": "node scripts/fix-security-vulnerabilities-v2.js",
    "verify:build": "node scripts/verify-build.js",
    "fix:workspace": "node scripts/fix-workspace-dependencies.js",
    "build:api": "cd apps/api && npm run build",
    "build:client": "cd apps/client-dashboard && npm run build",
    "build:manager": "cd apps/admin-dashboard && npm run build",
    "build:agency": "cd apps/admin-dashboard && npm run build:agency",
    "build:landing": "cd apps/landing-page && npm run build",
    "build:production": "node scripts/build-production.js",
    "start": "node server.js",
    "start:api": "cd apps/api && npm run start:prod",
    "start:prod": "npm run build && node server.js",
    "start:all": "node start-all-services.js",
    "start:client": "node client-server.js",
    "start:admin": "node admin-server.js",
    "start:agency": "node agency-server.js",
    "start:docker": "./start-production.sh",
    "start:pm2": "npm run build && pm2 start ecosystem.config.js --env production",
    "stop:pm2": "pm2 stop ecosystem.config.js",
    "restart:pm2": "pm2 restart ecosystem.config.js",
    "logs:pm2": "pm2 logs",
    "test": "npm run test:api && npm run test:client && npm run test:manager",
    "test:api": "cd apps/api && npm run test",
    "test:client": "cd apps/client-dashboard && npm run test",
    "test:manager": "cd apps/admin-dashboard && npm run test",
    "test:watch": "concurrently \"npm run test:api -- --watch\" \"npm run test:client -- --watch\" \"npm run test:manager -- --watch\"",
    "test:coverage": "npm run test:api -- --coverage && npm run test:client -- --coverage && npm run test:manager -- --coverage",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:headed": "playwright test --headed",
    "db:migrate": "cd apps/api && npx prisma migrate dev",
    "db:migrate:prod": "cd apps/api && npx prisma migrate deploy",
    "db:seed": "cd apps/api && npm run db:seed",
    "db:studio": "cd apps/api && npx prisma studio",
    "db:init": "cd apps/api && node scripts/init-database.js",
    "db:reset": "cd apps/api && npx prisma migrate reset --force && npm run db:seed",
    "db:generate": "cd apps/api && npx prisma generate",
    "db:push": "cd apps/api && npx prisma db push",
    "db:status": "cd apps/api && npx prisma migrate status",
    "lint": "npm run lint:api && npm run lint:client && npm run lint:manager && npm run lint:landing",
    "lint:api": "cd apps/api && npm run lint",
    "lint:client": "cd apps/client-dashboard && npm run lint",
    "lint:manager": "cd apps/admin-dashboard && npm run lint",
    "lint:landing": "cd apps/landing-page && npm run lint",
    "lint:fix": "npm run lint:api -- --fix && npm run lint:client -- --fix && npm run lint:manager -- --fix && npm run lint:landing -- --fix",
    "format": "npm run format:api && npm run format:client && npm run format:manager && npm run format:landing",
    "format:api": "cd apps/api && npm run format",
    "format:client": "cd apps/client-dashboard && npm run format",
    "format:manager": "cd apps/admin-dashboard && npm run format",
    "format:landing": "cd apps/landing-page && npm run format",
    "type-check": "npm run type-check:client && npm run type-check:manager && npm run type-check:landing",
    "type-check:client": "cd apps/client-dashboard && npm run type-check",
    "type-check:manager": "cd apps/admin-dashboard && npm run type-check",
    "type-check:landing": "cd apps/landing-page && npm run type-check",
    "clean": "npm run clean:api && npm run clean:client && npm run clean:manager && npm run clean:landing",
    "clean:api": "cd apps/api && rm -rf dist node_modules/.cache",
    "clean:client": "cd apps/client-dashboard && rm -rf dist node_modules/.cache",
    "clean:manager": "cd apps/admin-dashboard && rm -rf dist node_modules/.cache",
    "clean:landing": "cd apps/landing-page && rm -rf dist node_modules/.cache",
    "install:all": "npm install && cd apps/api && npm install && cd ../client-dashboard && npm install && cd ../admin-dashboard && npm install && cd ../landing-page && npm install",
    "prepare": "echo 'Skipping husky install in Docker environment'",
    "precommit": "npm run lint:fix && npm run type-check",
    "prepush": "npm run test && npm run build",
    "check-secrets": "node scripts/check-secrets.js",
    "check-all-secrets": "node scripts/check-all-secrets.js",
    "smart-secrets-check": "node scripts/smart-secrets-check.js",
    "final-secrets-check": "node scripts/final-secrets-check.js",
    "security-check": "npm run final-secrets-check",
    "diagnose": "node scripts/diagnose-production.js"
  },
  "dependencies": {
    "@nestjs/cli": "^11.0.10",
    "@nestjs/common": "^11.1.6",
    "@nestjs/config": "4.0.0",
    "@nestjs/core": "11.0.0",
    "@nestjs/event-emitter": "3.0.0",
    "@nestjs/jwt": "11.0.0",
    "@nestjs/passport": "10.0.3",
    "@nestjs/platform-express": "11.0.0",
    "@nestjs/platform-socket.io": "11.0.0",
    "@nestjs/swagger": "7.4.2",
    "@nestjs/throttler": "6.0.0",
    "@nestjs/websockets": "11.0.0",
    "ansis": "^4.2.0",
    "class-validator": "^0.14.2",
    "dotenv": "^17.2.3",
    "exceljs": "4.4.0",
    "express": "^4.18.2",
    "http-proxy-middleware": "^2.0.6",
    "inquirer": "^9.3.8",
    "jsonwebtoken": "^9.0.2",
    "mime-types": "^2.1.35",
    "minimatch": "^10.0.1",
    "node-domexception": "^2.0.2",
    "node-fetch": "^2.7.0",
    "pg": "^8.16.3",
    "reflect-metadata": "^0.2.2",
    "rxjs": "7.8.1",
    "set-cookie-parser": "2.7.1",
    "tmp": "^0.2.3",
    "typescript": "^5.9.3",
    "validator": "^13.12.0",
    "ws": "^8.18.3"
  },
  "devDependencies": {
    "@playwright/test": "^1.40.0",
    "@typescript-eslint/eslint-plugin": "^8.0.0",
    "@typescript-eslint/parser": "^8.0.0",
    "autoprefixer": "^10.4.21",
    "axios": "^1.7.7",
    "concurrently": "^8.2.2",
    "eslint": "^9.0.0",
    "eslint-config-prettier": "^9.1.2",
    "eslint-plugin-prettier": "^5.5.4",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.2",
    "postcss": "^8.5.6",
    "prettier": "^3.0.0",
    "react-refresh": "^0.17.0",
    "tailwindcss": "^3.4.17"
  },
  "optionalDependencies": {
    "@rollup/rollup-linux-x64-musl": "^4.0.0"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx,json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "resolutions": {
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "@types/react": "^19.1.13",
    "@types/react-dom": "^19.1.9",
    "**/react": "^19.1.1",
    "**/react-dom": "^19.1.1",
    "**/@types/react": "^19.1.13",
    "**/@types/react-dom": "^19.1.9",
    "vite": "^7.1.10",
    "**/vite": "^7.1.10",
    "@vitejs/plugin-react": "^5.0.3",
    "**/@vitejs/plugin-react": "^5.0.3",
    "rxjs": "7.8.1",
    "**/rxjs": "7.8.1",
    "@nestjs/common": "11.0.0",
    "@nestjs/core": "11.0.0",
    "@nestjs/platform-express": "11.0.0",
    "@nestjs/swagger": "7.4.2",
    "@nestjs/passport": "10.0.3",
    "**/@nestjs/common": "11.0.0",
    "**/@nestjs/core": "11.0.0",
    "**/@nestjs/platform-express": "11.0.0",
    "**/@nestjs/swagger": "7.4.2",
    "**/@nestjs/passport": "10.0.3",
    "typescript": "~5.8.3",
    "**/typescript": "~5.8.3"
  },
  "keywords": [
    "saas",
    "ai",
    "conversational",
    "phone",
    "agent",
    "nestjs",
    "react",
    "typescript"
  ],
  "author": "PrixAgent Team",
  "license": "MIT",
  "overrides": {
    "minimist": "^1.2.8",
    "lodash": "^4.17.21",
    "semver": "^7.5.4"
  }
}
