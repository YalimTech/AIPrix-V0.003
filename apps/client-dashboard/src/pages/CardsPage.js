import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { PlusIcon } from "@heroicons/react/24/outline";
import { useState } from "react";
const CardsPage = () => {
    const [cards] = useState([
    // Ejemplo de tarjetas - inicialmente vacÃ­o como en la imagen
    ]);
    const [rowsPerPage, setRowsPerPage] = useState(5);
    return (_jsxs("div", { className: "p-6", children: [_jsx("div", { className: "mb-8", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center", children: [_jsx("h1", { className: "text-2xl font-bold text-gray-900", children: "Cards" }), _jsx(PlusIcon, { className: "w-6 h-6 text-gray-600 ml-2" })] }), _jsxs("button", { className: "bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-medium transition-colors flex items-center", children: [_jsx(PlusIcon, { className: "w-5 h-5 mr-2" }), "+ Add"] })] }) }), _jsxs("div", { className: "bg-white rounded-lg shadow-sm border border-gray-200", children: [_jsx("div", { className: "px-6 py-4 border-b border-gray-200", children: _jsxs("div", { className: "grid grid-cols-3 gap-6", children: [_jsx("div", { className: "text-sm font-medium text-gray-700", children: "Default" }), _jsx("div", { className: "text-sm font-medium text-gray-700", children: "Card Number" }), _jsx("div", { className: "text-sm font-medium text-gray-700", children: "Action" })] }) }), _jsx("div", { className: "px-6 py-8", children: cards.length === 0 ? (_jsx("div", { className: "text-center text-gray-500", children: _jsx("p", { children: "No cards found" }) })) : (cards.map((card, index) => (_jsxs("div", { className: "grid grid-cols-3 gap-6 py-4 border-b border-gray-100 last:border-b-0", children: [_jsx("div", { className: "flex items-center", children: _jsx("span", { className: "text-sm text-gray-700", children: card.isDefault ? "Yes" : "No" }) }), _jsxs("div", { className: "text-sm text-gray-700", children: [card.type, " \u2022\u2022\u2022\u2022 ", card.last4] }), _jsx("div", { className: "text-sm", children: _jsx("button", { className: "text-red-600 hover:text-red-700", children: "Remove" }) })] }, index)))) })] }), _jsxs("div", { className: "mt-6 flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center text-sm text-gray-700", children: [_jsx("span", { children: "Rows per page:" }), _jsxs("select", { value: rowsPerPage, onChange: (e) => setRowsPerPage(Number(e.target.value)), className: "ml-2 px-2 py-1 border border-gray-300 rounded text-sm", children: [_jsx("option", { value: 5, children: "5" }), _jsx("option", { value: 10, children: "10" }), _jsx("option", { value: 25, children: "25" })] })] }), _jsxs("div", { className: "flex items-center text-sm text-gray-700", children: [_jsxs("span", { children: [cards.length === 0 ? "0-0" : `1-${Math.min(rowsPerPage, cards.length)}`, " of ", cards.length] }), _jsxs("div", { className: "ml-4 flex space-x-2", children: [_jsx("button", { disabled: cards.length === 0, className: "p-1 text-gray-400 hover:text-gray-600 disabled:cursor-not-allowed", children: "\u2190" }), _jsx("button", { disabled: cards.length === 0, className: "p-1 text-gray-400 hover:text-gray-600 disabled:cursor-not-allowed", children: "\u2192" })] })] })] })] }));
};
export default CardsPage;
