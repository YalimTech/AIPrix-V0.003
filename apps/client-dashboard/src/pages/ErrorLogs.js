import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { ChevronRightIcon, HomeIcon } from "@heroicons/react/24/outline";
import { useState } from "react";
import { useUserInfo } from "../hooks/useDashboard";
const ErrorLogs = () => {
    // Estados para los filtros
    const { data: userInfo } = useUserInfo();
    const [clientId, setClientId] = useState(userInfo?.clientId || "");
    const [agent, setAgent] = useState("All");
    const [fromDate, setFromDate] = useState("");
    const [toDate, setToDate] = useState("");
    const [rowsPerPage, setRowsPerPage] = useState(10);
    // Datos vacíos para empezar (0-0 of 0)
    const errorLogs = [];
    // Función para limpiar filtros
    const handleClear = () => {
        setClientId(userInfo?.clientId || "");
        setAgent("All");
        setFromDate("");
        setToDate("");
    };
    return (_jsxs("div", { className: "min-h-screen bg-gray-50", children: [_jsx("div", { className: "bg-white border-b border-gray-200 px-6 py-3", children: _jsxs("div", { className: "flex items-center text-sm text-gray-600", children: [_jsx(HomeIcon, { className: "w-4 h-4 text-blue-600" }), _jsx(ChevronRightIcon, { className: "w-4 h-4 mx-2 text-gray-400" }), _jsx("span", { className: "text-gray-700 font-medium", children: "Error Logs" })] }) }), _jsxs("div", { className: "px-6 py-6", children: [_jsx("h1", { className: "text-2xl font-bold text-gray-900 mb-6", children: "Error Logs" }), _jsx("div", { className: "bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6", children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-5 gap-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-2", children: "Client ID" }), _jsx("input", { type: "text", value: clientId, onChange: (e) => setClientId(e.target.value), className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm", placeholder: userInfo?.clientId || "Client ID" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-2", children: "Agent" }), _jsxs("select", { value: agent, onChange: (e) => setAgent(e.target.value), className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm bg-white appearance-none cursor-pointer", style: {
                                                backgroundImage: `url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3E%3Cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3E%3C/svg%3E")`,
                                                backgroundPosition: "right 0.5rem center",
                                                backgroundRepeat: "no-repeat",
                                                backgroundSize: "1.5em 1.5em",
                                                paddingRight: "2.5rem",
                                            }, children: [_jsx("option", { value: "All", children: "All" }), _jsx("option", { value: "Inbound", children: "Inbound" }), _jsx("option", { value: "Outbound", children: "Outbound" })] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-2", children: "From" }), _jsx("input", { type: "date", value: fromDate, onChange: (e) => setFromDate(e.target.value), className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-2", children: "To" }), _jsx("input", { type: "date", value: toDate, onChange: (e) => setToDate(e.target.value), className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm" })] }), _jsx("div", { className: "flex items-end", children: _jsx("button", { onClick: handleClear, className: "w-full px-4 py-2 text-red-600 hover:text-red-700 font-medium text-sm transition-colors", children: "Clear" }) })] }) }), _jsxs("div", { className: "bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden", children: [_jsx("div", { className: "overflow-x-auto", children: _jsxs("table", { className: "min-w-full divide-y divide-gray-200", children: [_jsx("thead", { className: "bg-gray-50", children: _jsxs("tr", { children: [_jsx("th", { className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Call Type" }), _jsx("th", { className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "From Number" }), _jsx("th", { className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "To Number" }), _jsx("th", { className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Messages" }), _jsx("th", { className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Agent" }), _jsx("th", { className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Timestamp \u2193" })] }) }), _jsx("tbody", { className: "bg-white divide-y divide-gray-200", children: errorLogs.length === 0 ? (_jsx("tr", { children: _jsx("td", { colSpan: 6, className: "px-6 py-12 text-center text-sm text-gray-500", children: "No error logs found" }) })) : (errorLogs.map((log) => (_jsxs("tr", { className: "hover:bg-gray-50", children: [_jsx("td", { className: "px-6 py-4 whitespace-nowrap text-sm text-gray-900", children: log.callType }), _jsx("td", { className: "px-6 py-4 whitespace-nowrap text-sm text-gray-900", children: log.fromNumber }), _jsx("td", { className: "px-6 py-4 whitespace-nowrap text-sm text-gray-900", children: log.toNumber }), _jsx("td", { className: "px-6 py-4 text-sm text-gray-900", children: log.messages }), _jsx("td", { className: "px-6 py-4 whitespace-nowrap text-sm text-gray-900", children: log.agent }), _jsx("td", { className: "px-6 py-4 whitespace-nowrap text-sm text-gray-900", children: log.timestamp })] }, log.id)))) })] }) }), _jsx("div", { className: "bg-white px-6 py-3 border-t border-gray-200", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("span", { className: "text-sm text-gray-700", children: "Rows per page:" }), _jsxs("select", { value: rowsPerPage, onChange: (e) => setRowsPerPage(Number(e.target.value)), className: "px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500", children: [_jsx("option", { value: 10, children: "10" }), _jsx("option", { value: 25, children: "25" }), _jsx("option", { value: 50, children: "50" }), _jsx("option", { value: 100, children: "100" })] })] }), _jsxs("div", { className: "flex items-center space-x-4", children: [_jsxs("span", { className: "text-sm text-gray-700", children: ["0-0 of ", errorLogs.length] }), _jsxs("div", { className: "flex items-center space-x-1", children: [_jsx("button", { disabled: true, className: "p-1 rounded hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed", children: _jsx("svg", { className: "w-5 h-5 text-gray-400", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M15 19l-7-7 7-7" }) }) }), _jsx("button", { disabled: true, className: "p-1 rounded hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed", children: _jsx("svg", { className: "w-5 h-5 text-gray-400", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M9 5l7 7-7 7" }) }) })] })] })] }) })] })] })] }));
};
export default ErrorLogs;
