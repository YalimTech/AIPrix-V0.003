import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState } from "react";
import { 
// PlusIcon, // No se usa
ChartBarIcon, ChartPieIcon, XMarkIcon, FunnelIcon, 
// CalendarIcon, // No se usa
HomeIcon, ChevronLeftIcon, ChevronRightIcon, SparklesIcon, } from "@heroicons/react/24/outline";
import SummaryModal from "../components/modals/SummaryModal";
import DatePicker from "../components/ui/DatePicker";
const Campaigns = () => {
    const [activeTab, setActiveTab] = useState("CRM");
    const [activeSubTab, setActiveSubTab] = useState("All");
    const [viewMode, setViewMode] = useState("Total");
    const [summaryMode, setSummaryMode] = useState("Total");
    const [showFilters, setShowFilters] = useState(false);
    const [showNewCampaignModal, setShowNewCampaignModal] = useState(false);
    const [showSummaryModal, setShowSummaryModal] = useState(false);
    const [selectedCallData, setSelectedCallData] = useState(null);
    // Filtros
    const [fromDate, setFromDate] = useState("09/24/2025");
    const [toDate, setToDate] = useState("10/01/2025");
    const [stateFilter, setStateFilter] = useState("");
    const [statusFilter, setStatusFilter] = useState("");
    const [agentFilter, setAgentFilter] = useState("");
    // New Campaign Form
    const [campaignName, setCampaignName] = useState("");
    const [selectedContactList, setSelectedContactList] = useState("");
    const [selectedAgent, setSelectedAgent] = useState("");
    const [budget, setBudget] = useState("");
    // Mock data for "All" view
    const allCalls = [
        {
            id: "1",
            date: "Tue, 30 Sep 2025",
            spent: 1.14,
            minutesUsed: 8.78,
            calls: 3,
            answers: 2,
            noAnswers: 1,
            didNotConnect: 0,
            transfers: 0,
            appointments: 0,
        },
    ];
    // Mock data for "Campaigns" view
    const campaigns = [];
    const handleResetFilters = () => {
        setFromDate("");
        setToDate("");
        setStateFilter("");
        setStatusFilter("");
        setAgentFilter("");
    };
    const handleCreateCampaign = () => {
        console.log("Creating campaign:", {
            campaignName,
            selectedContactList,
            selectedAgent,
            budget,
        });
        setShowNewCampaignModal(false);
        setCampaignName("");
        setSelectedContactList("");
        setSelectedAgent("");
        setBudget("");
    };
    // Calculate All Calls totals
    const allCallsTotals = allCalls.reduce((acc, call) => ({
        minutesUsed: acc.minutesUsed + call.minutesUsed,
        spent: acc.spent + call.spent,
        calls: acc.calls + call.calls,
        answers: acc.answers + call.answers,
        noAnswers: acc.noAnswers + call.noAnswers,
        didNotConnect: acc.didNotConnect + call.didNotConnect,
        transfers: acc.transfers + call.transfers,
        appointments: acc.appointments + call.appointments,
    }), {
        minutesUsed: 0,
        spent: 0,
        calls: 0,
        answers: 0,
        noAnswers: 0,
        didNotConnect: 0,
        transfers: 0,
        appointments: 0,
    });
    return (_jsxs("div", { className: "min-h-screen bg-gray-50", children: [_jsxs("div", { className: "flex items-center justify-end py-4 px-6 text-sm text-gray-500", children: [_jsx(HomeIcon, { className: "w-4 h-4" }), _jsx("span", { className: "mx-2", children: ">" }), _jsx("span", { className: "text-gray-900 font-medium", children: "Campaigns" })] }), _jsxs("div", { className: "max-w-full mx-auto px-6 pb-12", children: [_jsx("div", { className: "mb-6", children: _jsx("h1", { className: "text-3xl font-bold text-gray-900", children: "Campaigns" }) }), _jsxs("div", { className: "flex items-center gap-6 mb-6 border-b border-gray-200", children: [_jsxs("button", { onClick: () => setActiveTab("CRM"), className: `flex items-center gap-2 pb-3 px-1 border-b-2 transition-colors ${activeTab === "CRM"
                                    ? "border-blue-600 text-blue-600"
                                    : "border-transparent text-gray-600 hover:text-gray-900"}`, children: [_jsx(ChartBarIcon, { className: "w-5 h-5" }), _jsx("span", { className: "font-medium text-sm", children: "CRM" })] }), _jsxs("button", { onClick: () => setActiveTab("Dashboard"), className: `flex items-center gap-2 pb-3 px-1 border-b-2 transition-colors ${activeTab === "Dashboard"
                                    ? "border-blue-600 text-blue-600"
                                    : "border-transparent text-gray-600 hover:text-gray-900"}`, children: [_jsx(ChartPieIcon, { className: "w-5 h-5" }), _jsx("span", { className: "font-medium text-sm", children: "Dashboard" })] })] }), _jsxs("div", { className: "flex items-center justify-between mb-6", children: [_jsx("div", { className: "flex items-center gap-3", children: activeSubTab === "All" || activeSubTab === "Campaigns" ? (_jsxs(_Fragment, { children: [_jsx("button", { onClick: () => setActiveSubTab("All"), className: `px-4 py-2 rounded-lg text-sm font-medium transition-colors ${activeSubTab === "All"
                                                ? "bg-blue-600 text-white"
                                                : "bg-white text-gray-700 border border-gray-300 hover:bg-gray-50"}`, children: "All" }), _jsx("button", { onClick: () => setActiveSubTab("Campaigns"), className: `px-4 py-2 rounded-lg text-sm font-medium transition-colors ${activeSubTab === "Campaigns"
                                                ? "bg-blue-600 text-white"
                                                : "bg-white text-gray-700 border border-gray-300 hover:bg-gray-50"}`, children: "Campaigns" })] })) : null }), _jsxs("div", { className: "flex items-center gap-3", children: [_jsx("button", { onClick: () => setViewMode("Total"), className: `px-4 py-2 rounded-lg text-sm font-medium transition-colors ${viewMode === "Total"
                                            ? "bg-blue-600 text-white"
                                            : "bg-white text-gray-700 border border-gray-300 hover:bg-gray-50"}`, children: "Total" }), _jsx("button", { onClick: () => setViewMode("Percentage"), className: `px-4 py-2 rounded-lg text-sm font-medium transition-colors ${viewMode === "Percentage"
                                            ? "bg-blue-600 text-white"
                                            : "bg-white text-gray-700 border border-gray-300 hover:bg-gray-50"}`, children: "Percentage" }), _jsx("button", { onClick: () => setViewMode("Cost"), className: `px-4 py-2 rounded-lg text-sm font-medium transition-colors ${viewMode === "Cost"
                                            ? "bg-blue-600 text-white"
                                            : "bg-white text-gray-700 border border-gray-300 hover:bg-gray-50"}`, children: "Cost" }), _jsx("button", { onClick: () => setShowFilters(!showFilters), className: "p-2 bg-blue-600 text-white rounded-full hover:bg-blue-700 transition-colors", children: _jsx(FunnelIcon, { className: "w-5 h-5" }) })] })] }), activeSubTab === "All" ? (_jsxs(_Fragment, { children: [_jsx("div", { className: "bg-white rounded-lg border border-gray-200 mb-6 overflow-hidden", children: _jsx("div", { className: "overflow-x-auto", children: _jsxs("table", { className: "w-full", children: [_jsx("thead", { className: "bg-gray-50 border-b border-gray-200", children: _jsxs("tr", { children: [_jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider", children: "Date" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider", children: "Spent" }), viewMode === "Percentage" ? (_jsxs(_Fragment, { children: [_jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider", children: "Answer %" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider", children: "No Answer %" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider", children: "Did Not Connect %" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider", children: "Transfer %" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider", children: "Appointment %" })] })) : viewMode === "Cost" ? (_jsxs(_Fragment, { children: [_jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider", children: "Cost Per Call" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider", children: "Cost Per Answer" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider", children: "Cost Per No Answer" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider", children: "Cost Per Transfer" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider", children: "Cost Per Appointment" })] })) : (_jsxs(_Fragment, { children: [_jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider", children: "Minutes Used" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider", children: "Calls" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider", children: "Answers" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider", children: "No Answers" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider", children: "Did Not Connect" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider", children: "Transfers" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider", children: "Appointments" })] })), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider", children: "Summary" })] }) }), _jsx("tbody", { children: allCalls.map((call) => (_jsxs("tr", { className: "border-b border-gray-200 hover:bg-gray-50", children: [_jsx("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: call.date }), _jsxs("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: ["$", call.spent.toFixed(2)] }), viewMode === "Percentage" ? (_jsxs(_Fragment, { children: [_jsxs("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: [call.calls > 0
                                                                            ? ((call.answers / call.calls) * 100).toFixed(2)
                                                                            : "0.00", "%"] }), _jsxs("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: [call.calls > 0
                                                                            ? ((call.noAnswers / call.calls) * 100).toFixed(2)
                                                                            : "0.00", "%"] }), _jsxs("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: [call.calls > 0
                                                                            ? ((call.didNotConnect / call.calls) *
                                                                                100).toFixed(2)
                                                                            : "0.00", "%"] }), _jsxs("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: [call.calls > 0
                                                                            ? ((call.transfers / call.calls) * 100).toFixed(2)
                                                                            : "0.00", "%"] }), _jsxs("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: [call.calls > 0
                                                                            ? ((call.appointments / call.calls) *
                                                                                100).toFixed(2)
                                                                            : "0.00", "%"] })] })) : viewMode === "Cost" ? (_jsxs(_Fragment, { children: [_jsxs("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: ["$", call.calls > 0
                                                                            ? (call.spent / call.calls).toFixed(2)
                                                                            : "0.00"] }), _jsxs("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: ["$", call.answers > 0
                                                                            ? (call.spent / call.answers).toFixed(2)
                                                                            : "0.00"] }), _jsxs("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: ["$", call.noAnswers > 0
                                                                            ? (call.spent / call.noAnswers).toFixed(2)
                                                                            : "0.00"] }), _jsxs("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: ["$", call.transfers > 0
                                                                            ? (call.spent / call.transfers).toFixed(2)
                                                                            : "0.00"] }), _jsxs("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: ["$", call.appointments > 0
                                                                            ? (call.spent / call.appointments).toFixed(2)
                                                                            : "0.00"] })] })) : (_jsxs(_Fragment, { children: [_jsx("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: call.minutesUsed.toFixed(2) }), _jsx("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: call.calls }), _jsx("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: call.answers }), _jsx("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: call.noAnswers }), _jsx("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: call.didNotConnect }), _jsx("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: call.transfers }), _jsx("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: call.appointments })] })), _jsx("td", { className: "px-4 py-4 whitespace-nowrap", children: _jsxs("button", { onClick: () => {
                                                                    setSelectedCallData(call);
                                                                    setShowSummaryModal(true);
                                                                }, className: "flex items-center gap-1.5 px-3 py-1.5 border border-gray-300 rounded-lg text-sm text-gray-700 hover:bg-gray-50 transition-colors", children: [_jsx(SparklesIcon, { className: "w-4 h-4" }), "Summary"] }) })] }, call.id))) })] }) }) }), _jsxs("div", { className: "bg-white rounded-lg border border-gray-200 p-6", children: [_jsxs("div", { className: "flex items-center justify-between mb-6", children: [_jsx("h2", { className: "text-lg font-semibold text-gray-900", children: "All Calls" }), _jsxs("div", { className: "flex items-center gap-3", children: [_jsx("button", { onClick: () => setSummaryMode("Total"), className: `px-4 py-2 rounded-lg text-sm font-medium transition-colors ${summaryMode === "Total"
                                                            ? "bg-blue-600 text-white"
                                                            : "bg-white text-gray-700 border border-gray-300 hover:bg-gray-50"}`, children: "Total" }), _jsx("button", { onClick: () => setSummaryMode("Average"), className: `px-4 py-2 rounded-lg text-sm font-medium transition-colors ${summaryMode === "Average"
                                                            ? "bg-blue-600 text-white"
                                                            : "bg-white text-gray-700 border border-gray-300 hover:bg-gray-50"}`, children: "Average" })] })] }), _jsx("div", { className: "grid grid-cols-9 gap-4", children: summaryMode === "Average" ? (_jsxs(_Fragment, { children: [_jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Average Minutes Used" }), _jsx("div", { className: "text-sm text-gray-900", children: allCalls.length > 0
                                                                ? (allCallsTotals.minutesUsed / allCalls.length).toFixed(2)
                                                                : "0.00" })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Average Spent" }), _jsxs("div", { className: "text-sm text-gray-900", children: ["$", allCalls.length > 0
                                                                    ? (allCallsTotals.spent / allCalls.length).toFixed(2)
                                                                    : "0.00"] })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Average Calls" }), _jsx("div", { className: "text-sm text-gray-900", children: allCalls.length > 0
                                                                ? (allCallsTotals.calls / allCalls.length).toFixed(2)
                                                                : "0.00" })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Average Answers" }), _jsx("div", { className: "text-sm text-gray-900", children: allCalls.length > 0
                                                                ? (allCallsTotals.answers / allCalls.length).toFixed(2)
                                                                : "0.00" })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Average No Answer" }), _jsx("div", { className: "text-sm text-gray-900", children: allCalls.length > 0
                                                                ? (allCallsTotals.noAnswers / allCalls.length).toFixed(2)
                                                                : "0.00" })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Average Transfers" }), _jsx("div", { className: "text-sm text-gray-900", children: allCalls.length > 0
                                                                ? (allCallsTotals.transfers / allCalls.length).toFixed(2)
                                                                : "0.00" })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Average Cost Per Transfer" }), _jsx("div", { className: "text-sm text-gray-900", children: allCallsTotals.transfers > 0
                                                                ? (allCallsTotals.spent / allCallsTotals.transfers).toFixed(2)
                                                                : "0.00" })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Average Appointments" }), _jsx("div", { className: "text-sm text-gray-900", children: allCalls.length > 0
                                                                ? (allCallsTotals.appointments / allCalls.length).toFixed(0)
                                                                : "0" })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Average Cost Per Appointments" }), _jsx("div", { className: "text-sm text-gray-900", children: allCallsTotals.appointments > 0
                                                                ? (allCallsTotals.spent / allCallsTotals.appointments).toFixed(2)
                                                                : "0.00" })] })] })) : (_jsxs(_Fragment, { children: [_jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Total Minutes Used" }), _jsx("div", { className: "text-sm text-gray-900", children: allCallsTotals.minutesUsed.toFixed(2) })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Total Spent" }), _jsxs("div", { className: "text-sm text-gray-900", children: ["$", allCallsTotals.spent.toFixed(2)] })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Total Calls" }), _jsx("div", { className: "text-sm text-gray-900", children: allCallsTotals.calls })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Total Answers" }), _jsx("div", { className: "text-sm text-gray-900", children: allCallsTotals.answers })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Total No Answers" }), _jsx("div", { className: "text-sm text-gray-900", children: allCallsTotals.noAnswers })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Total Did Not Connect" }), _jsx("div", { className: "text-sm text-gray-900", children: allCallsTotals.didNotConnect })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Total Transfers" }), _jsx("div", { className: "text-sm text-gray-900", children: allCallsTotals.transfers })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Total Appointments" }), _jsx("div", { className: "text-sm text-gray-900", children: allCallsTotals.appointments })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "-" }), _jsx("div", { className: "text-sm text-gray-900", children: "-" })] })] })) })] })] })) : (_jsxs(_Fragment, { children: [_jsxs("div", { className: "bg-white rounded-lg border border-gray-200 mb-6 overflow-hidden", children: [_jsx("div", { className: "overflow-x-auto", children: _jsxs("table", { className: "w-full min-w-max", children: [_jsx("thead", { className: "bg-gray-50 border-b border-gray-200", children: _jsxs("tr", { children: [_jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider whitespace-nowrap", children: "Off/On" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider whitespace-nowrap", children: "Name" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider whitespace-nowrap", children: "Date" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider whitespace-nowrap", children: "Contact List ID" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider whitespace-nowrap", children: "Agent Name" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider whitespace-nowrap", children: "Budget" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider whitespace-nowrap", children: "Spent" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider whitespace-nowrap", children: "Cost Estimate" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider whitespace-nowrap", children: "Total Contacts" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider whitespace-nowrap", children: "Contacts Remaining" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider whitespace-nowrap", children: "Contacts Called" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider whitespace-nowrap", children: "Answers" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider whitespace-nowrap", children: "No Answers" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider whitespace-nowrap", children: "Did Not Connect" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider whitespace-nowrap", children: "Transfers" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider whitespace-nowrap", children: "Appointments" }), _jsx("th", { className: "px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider whitespace-nowrap", children: "Actions" })] }) }), _jsx("tbody", { children: campaigns.length === 0 ? (_jsx("tr", { children: _jsx("td", { colSpan: 17, className: "px-4 py-12 text-center text-sm text-gray-500", children: "No Campaigns Created" }) })) : (campaigns.map((campaign) => (_jsxs("tr", { className: "border-b border-gray-200 hover:bg-gray-50", children: [_jsx("td", { className: "px-4 py-4 whitespace-nowrap", children: _jsx("div", { className: `w-10 h-5 rounded-full ${campaign.isActive ? "bg-green-500" : "bg-gray-300"}` }) }), _jsx("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: campaign.name }), _jsx("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: campaign.date }), _jsx("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: campaign.contactListId }), _jsx("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: campaign.agentName }), _jsxs("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: ["$", campaign.budget.toFixed(2)] }), _jsxs("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: ["$", campaign.spent.toFixed(2)] }), _jsxs("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: ["$", campaign.costEstimate.toFixed(2)] }), _jsx("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: campaign.totalContacts }), _jsx("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: campaign.contactsRemaining }), _jsx("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: campaign.contactsCalled }), _jsx("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: campaign.answers }), _jsx("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: campaign.noAnswers }), _jsx("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: campaign.didNotConnect }), _jsx("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: campaign.transfers }), _jsx("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: campaign.appointments }), _jsx("td", { className: "px-4 py-4 whitespace-nowrap text-sm text-gray-900", children: "\u2022\u2022\u2022" })] }, campaign.id)))) })] }) }), _jsx("div", { className: "bg-gray-100 p-2", children: _jsxs("div", { className: "h-2 bg-gray-300 rounded-full relative", children: [_jsx("div", { className: "absolute left-0 top-0 h-full w-full bg-gray-400 rounded-full" }), _jsx("button", { className: "absolute left-0 top-1/2 -translate-y-1/2 -translate-x-1/2 w-6 h-6 bg-gray-500 rounded-sm flex items-center justify-center text-white hover:bg-gray-600", children: _jsx(ChevronLeftIcon, { className: "w-4 h-4" }) }), _jsx("button", { className: "absolute right-0 top-1/2 -translate-y-1/2 translate-x-1/2 w-6 h-6 bg-gray-500 rounded-sm flex items-center justify-center text-white hover:bg-gray-600", children: _jsx(ChevronRightIcon, { className: "w-4 h-4" }) })] }) })] }), _jsxs("div", { className: "bg-white rounded-lg border border-gray-200 p-6", children: [_jsxs("div", { className: "flex items-center justify-between mb-6", children: [_jsx("h2", { className: "text-lg font-semibold text-gray-900", children: "All Campaigns" }), _jsxs("div", { className: "flex items-center gap-3", children: [_jsx("button", { onClick: () => setSummaryMode("Total"), className: `px-4 py-2 rounded-lg text-sm font-medium transition-colors ${summaryMode === "Total"
                                                            ? "bg-blue-600 text-white"
                                                            : "bg-white text-gray-700 border border-gray-300 hover:bg-gray-50"}`, children: "Total" }), _jsx("button", { onClick: () => setSummaryMode("Average"), className: `px-4 py-2 rounded-lg text-sm font-medium transition-colors ${summaryMode === "Average"
                                                            ? "bg-blue-600 text-white"
                                                            : "bg-white text-gray-700 border border-gray-300 hover:bg-gray-50"}`, children: "Average" })] })] }), _jsxs("div", { className: "grid grid-cols-5 gap-4 mb-4", children: [_jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Total Budget" }), _jsx("div", { className: "text-sm text-gray-900", children: "-" })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Total Spent" }), _jsx("div", { className: "text-sm text-gray-900", children: "-" })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Total Contacts" }), _jsx("div", { className: "text-sm text-gray-900", children: "-" })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Total Remaining Contacts" }), _jsx("div", { className: "text-sm text-gray-900", children: "-" })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Total Called" }), _jsx("div", { className: "text-sm text-gray-900", children: "-" })] })] }), _jsxs("div", { className: "grid grid-cols-5 gap-4", children: [_jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Total Answers" }), _jsx("div", { className: "text-sm text-gray-900", children: "-" })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Total No Answers" }), _jsx("div", { className: "text-sm text-gray-900", children: "-" })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Total Did Not Connect" }), _jsx("div", { className: "text-sm text-gray-900", children: "-" })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Total Transfers" }), _jsx("div", { className: "text-sm text-gray-900", children: "-" })] }), _jsxs("div", { children: [_jsx("div", { className: "text-xs font-medium text-gray-600 mb-2", children: "Total Appointments" }), _jsx("div", { className: "text-sm text-gray-900", children: "-" })] })] }), _jsx("div", { className: "text-center mt-6 text-sm text-gray-500", children: "No Campaigns Created" })] })] })), _jsxs("div", { className: "flex items-center justify-end gap-4 text-sm text-gray-700 mt-6", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx("span", { children: "Rows per page:" }), _jsxs("select", { className: "border border-gray-300 rounded px-2 py-1 text-sm", children: [_jsx("option", { children: "25" }), _jsx("option", { children: "50" }), _jsx("option", { children: "100" })] })] }), _jsx("span", { children: allCalls.length > 0
                                    ? `1-${allCalls.length} of ${allCalls.length}`
                                    : "0-0 of 0" }), _jsxs("div", { className: "flex items-center gap-1", children: [_jsx("button", { className: "p-1 text-gray-400 hover:text-gray-600 disabled:opacity-30", disabled: true, children: _jsx(ChevronLeftIcon, { className: "w-5 h-5" }) }), _jsx("button", { className: "p-1 text-gray-400 hover:text-gray-600 disabled:opacity-30", disabled: true, children: _jsx(ChevronRightIcon, { className: "w-5 h-5" }) })] })] })] }), showFilters && (_jsxs("div", { className: "fixed right-6 top-32 w-80 bg-white shadow-2xl z-50 rounded-lg border border-gray-200 overflow-visible", children: [_jsxs("div", { className: "flex items-center justify-between px-5 py-4 border-b border-gray-200", children: [_jsx("h3", { className: "text-lg font-semibold text-gray-900", children: "Filters" }), _jsxs("div", { className: "flex items-center gap-3", children: [_jsx("button", { onClick: handleResetFilters, className: "text-sm font-medium text-red-600 hover:text-red-700", children: "Reset" }), _jsx("button", { onClick: () => setShowFilters(false), className: "p-1 text-gray-400 hover:text-gray-600", children: _jsx(XMarkIcon, { className: "w-5 h-5" }) })] })] }), _jsxs("div", { className: "px-5 py-5", children: [_jsxs("div", { className: "grid grid-cols-2 gap-3 mb-5", children: [_jsx(DatePicker, { value: fromDate, onChange: setFromDate, label: "From", placeholder: "09/24/2025" }), _jsx(DatePicker, { value: toDate, onChange: setToDate, label: "To", placeholder: "10/01/2025" })] }), _jsxs("div", { className: "mb-5", children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-2", children: "State" }), _jsxs("select", { value: stateFilter, onChange: (e) => setStateFilter(e.target.value), className: "w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm text-gray-700 bg-white appearance-none cursor-pointer", style: {
                                            backgroundImage: `url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e")`,
                                            backgroundPosition: "right 0.5rem center",
                                            backgroundRepeat: "no-repeat",
                                            backgroundSize: "1.5em 1.5em",
                                            paddingRight: "2.5rem",
                                        }, children: [_jsx("option", { value: "", children: "State" }), _jsx("option", { value: "on", children: "On" }), _jsx("option", { value: "off", children: "Off" })] })] }), _jsxs("div", { className: "mb-5", children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-2", children: "Status" }), _jsxs("select", { value: statusFilter, onChange: (e) => setStatusFilter(e.target.value), className: "w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm text-gray-700 bg-white appearance-none cursor-pointer", style: {
                                            backgroundImage: `url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e")`,
                                            backgroundPosition: "right 0.5rem center",
                                            backgroundRepeat: "no-repeat",
                                            backgroundSize: "1.5em 1.5em",
                                            paddingRight: "2.5rem",
                                        }, children: [_jsx("option", { value: "", children: "Status" }), _jsx("option", { value: "prelaunch", children: "Prelaunch" }), _jsx("option", { value: "launched", children: "Launched" }), _jsx("option", { value: "complete", children: "Complete" })] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-2", children: "Agent" }), _jsxs("select", { value: agentFilter, onChange: (e) => setAgentFilter(e.target.value), className: "w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm text-gray-700 bg-white appearance-none cursor-pointer", style: {
                                            backgroundImage: `url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e")`,
                                            backgroundPosition: "right 0.5rem center",
                                            backgroundRepeat: "no-repeat",
                                            backgroundSize: "1.5em 1.5em",
                                            paddingRight: "2.5rem",
                                        }, children: [_jsx("option", { value: "", children: "Agent" }), _jsx("option", { value: "agent1", children: "Agent 1" }), _jsx("option", { value: "agent2", children: "Agent 2" }), _jsx("option", { value: "agent3", children: "Agent 3" })] })] })] })] })), _jsx(SummaryModal, { isOpen: showSummaryModal, onClose: () => setShowSummaryModal(false), callData: selectedCallData }), showNewCampaignModal && (_jsx("div", { className: "fixed inset-0 z-50 flex items-center justify-center", style: { backgroundColor: "rgba(0, 0, 0, 0.5)" }, onClick: () => setShowNewCampaignModal(false), children: _jsxs("div", { className: "bg-white rounded-xl shadow-2xl w-full max-w-md mx-4", onClick: (e) => e.stopPropagation(), children: [_jsx("div", { className: "px-6 py-5 border-b border-gray-200", children: _jsx("h2", { className: "text-xl font-semibold text-gray-900", children: "New Campaign" }) }), _jsxs("div", { className: "px-6 py-6 space-y-4", children: [_jsxs("div", { children: [_jsxs("label", { className: "block text-sm font-medium text-gray-700 mb-2", children: ["Campaign Name ", _jsx("span", { className: "text-red-500", children: "*" })] }), _jsx("input", { type: "text", value: campaignName, onChange: (e) => setCampaignName(e.target.value), className: "w-full px-4 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm" })] }), _jsxs("div", { className: "grid grid-cols-2 gap-4", children: [_jsxs("div", { children: [_jsxs("label", { className: "block text-sm font-medium text-gray-700 mb-2", children: ["Contact List ", _jsx("span", { className: "text-red-500", children: "*" })] }), _jsxs("select", { value: selectedContactList, onChange: (e) => setSelectedContactList(e.target.value), className: "w-full px-4 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm bg-white", children: [_jsx("option", { value: "" }), _jsx("option", { value: "list1", children: "Contact List 1" }), _jsx("option", { value: "list2", children: "Contact List 2" })] })] }), _jsxs("div", { children: [_jsxs("label", { className: "block text-sm font-medium text-gray-700 mb-2", children: ["Agent ", _jsx("span", { className: "text-red-500", children: "*" })] }), _jsxs("select", { value: selectedAgent, onChange: (e) => setSelectedAgent(e.target.value), className: "w-full px-4 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm bg-white", children: [_jsx("option", { value: "" }), _jsx("option", { value: "agent1", children: "Agent 1" }), _jsx("option", { value: "agent2", children: "Agent 2" })] })] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-2", children: "Budget" }), _jsxs("div", { className: "relative", children: [_jsx("span", { className: "absolute left-4 top-1/2 -translate-y-1/2 text-gray-500 text-sm", children: "$" }), _jsx("input", { type: "number", value: budget, onChange: (e) => setBudget(e.target.value), className: "w-full pl-8 pr-4 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm" })] })] })] }), _jsxs("div", { className: "flex items-center justify-end gap-3 px-6 py-4 bg-gray-50 rounded-b-xl border-t border-gray-200", children: [_jsx("button", { onClick: () => setShowNewCampaignModal(false), className: "px-5 py-2 text-sm font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors border border-gray-300", children: "Cancel" }), _jsx("button", { onClick: handleCreateCampaign, className: "px-5 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors", children: "Create Campaign" })] })] }) }))] }));
};
export default Campaigns;
