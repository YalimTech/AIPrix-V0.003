import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { ArrowPathIcon, ArrowRightStartOnRectangleIcon, ArrowsPointingOutIcon, Bars3Icon, BeakerIcon, Cog6ToothIcon, CreditCardIcon, CurrencyDollarIcon, KeyIcon, LinkIcon, 
// Nuevos iconos para las funcionalidades faltantes
PauseIcon, Squares2X2Icon as PlusIcon, Squares2X2Icon, ArrowPathIcon as SyncIcon, UserGroupIcon, } from "@heroicons/react/24/outline";
import { useState } from "react";
import { useNavigate } from "react-router-dom";
// import ConnectionStatus from "../ui/ConnectionStatus"; // No se usa
// import NotificationCenter from "../ui/NotificationCenter"; // No se usa
import { useAuth } from "../../hooks/useAuth";
import { useUserInfo } from "../../hooks/useDashboard";
import { AddAccountBalanceModal, AutoRefillModal, ElevenLabsCredentialsModal, // Importar nuevo modal
PaymentMethodsModal, ProviderKeysModal, ScheduleCallPausesModal, SelectCRMModal, TransactionsModal, TwilioCredentialsModal, WebhookModal, } from "../modals/SettingsModals";
import Breadcrumb from "../ui/Breadcrumb";
const Header = ({ onMenuClick }) => {
    const { logout } = useAuth(); // user no se usa en este componente
    const { data: userInfo } = useUserInfo();
    const navigate = useNavigate();
    const [isSettingsMenuOpen, setIsSettingsMenuOpen] = useState(false);
    const [activeModal, setActiveModal] = useState(null);
    const [isCallPausesEnabled, setIsCallPausesEnabled] = useState(false);
    const handleLogout = () => {
        logout();
    };
    const toggleSettingsMenu = () => {
        setIsSettingsMenuOpen(!isSettingsMenuOpen);
    };
    const openModal = (modalName) => {
        setActiveModal(modalName);
        setIsSettingsMenuOpen(false);
    };
    const closeModal = () => {
        setActiveModal(null);
    };
    const handleNavigateToUsers = () => {
        navigate("/users");
        setIsSettingsMenuOpen(false);
    };
    return (_jsxs("header", { className: "bg-white shadow-sm border-b border-gray-200 relative", children: [_jsxs("div", { className: "flex items-center justify-between h-20 px-6", children: [_jsx("div", { className: "flex items-center space-x-4", children: _jsx("button", { onClick: onMenuClick, className: "p-2 rounded-lg text-gray-400 hover:text-gray-600 hover:bg-gray-100 transition-colors duration-200 lg:hidden", children: _jsx(Bars3Icon, { className: "w-6 h-6" }) }) }), _jsxs("div", { className: "flex items-center space-x-3", children: [_jsx("button", { className: "p-3 rounded-xl bg-blue-600 text-white hover:bg-blue-700 shadow-md hover:shadow-lg transition-all duration-200", children: _jsx(ArrowsPointingOutIcon, { className: "w-5 h-5" }) }), _jsxs("div", { className: "relative", children: [_jsx("button", { onClick: toggleSettingsMenu, className: "p-3 rounded-xl bg-blue-600 text-white hover:bg-blue-700 shadow-md hover:shadow-lg transition-all duration-200", children: _jsx(Cog6ToothIcon, { className: "w-5 h-5" }) }), isSettingsMenuOpen && (_jsxs("div", { className: "absolute right-0 mt-3 w-80 bg-white rounded-xl shadow-2xl border border-gray-200 overflow-hidden z-50", children: [_jsxs("div", { className: "px-5 py-4 bg-gradient-to-r from-blue-50 to-purple-50 border-b border-gray-200", children: [_jsx("div", { className: "font-bold text-gray-900 text-base", children: userInfo?.firstName && userInfo?.lastName
                                                            ? `${userInfo.firstName} ${userInfo.lastName}`
                                                            : userInfo?.email || "Usuario" }), _jsx("div", { className: "text-xs text-gray-500 mt-1", children: "Project Admin" }), _jsx("div", { className: "text-xs text-gray-400 mt-0.5", children: userInfo?.email || "N/A" })] }), _jsxs("div", { className: "py-2", children: [_jsxs("div", { className: "w-full flex items-center justify-between px-5 py-3 text-sm font-medium text-gray-700 hover:bg-blue-50 hover:text-blue-700 transition-all group", children: [_jsxs("div", { className: "flex items-center", children: [_jsx(PauseIcon, { className: "w-5 h-5 mr-3 text-gray-400 group-hover:text-blue-600 transition-colors" }), _jsx("span", { children: "Schedule Call Pauses" })] }), _jsx("button", { onClick: () => setIsCallPausesEnabled(!isCallPausesEnabled), className: `relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 ${isCallPausesEnabled ? "bg-blue-600" : "bg-gray-200"}`, children: _jsx("span", { className: `inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${isCallPausesEnabled
                                                                        ? "translate-x-6"
                                                                        : "translate-x-1"}` }) })] }), _jsxs("button", { onClick: () => openModal("payment-methods"), className: "w-full flex items-center px-5 py-3 text-sm font-medium text-gray-700 hover:bg-blue-50 hover:text-blue-700 transition-all group", children: [_jsx(CreditCardIcon, { className: "w-5 h-5 mr-3 text-gray-400 group-hover:text-blue-600 transition-colors" }), "Payment Methods"] }), _jsxs("button", { onClick: () => openModal("add-account-balance"), className: "w-full flex items-center px-5 py-3 text-sm font-medium text-gray-700 hover:bg-blue-50 hover:text-blue-700 transition-all group", children: [_jsx(CurrencyDollarIcon, { className: "w-5 h-5 mr-3 text-gray-400 group-hover:text-blue-600 transition-colors" }), "Add Account Balance"] }), _jsxs("button", { onClick: () => openModal("transactions"), className: "w-full flex items-center px-5 py-3 text-sm font-medium text-gray-700 hover:bg-blue-50 hover:text-blue-700 transition-all group", children: [_jsx(ArrowPathIcon, { className: "w-5 h-5 mr-3 text-gray-400 group-hover:text-blue-600 transition-colors" }), "Transactions"] }), _jsxs("button", { onClick: () => openModal("select-crm"), className: "w-full flex items-center px-5 py-3 text-sm font-medium text-gray-700 hover:bg-blue-50 hover:text-blue-700 transition-all group", children: [_jsx(PlusIcon, { className: "w-5 h-5 mr-3 text-gray-400 group-hover:text-blue-600 transition-colors" }), "Select CRM"] }), _jsxs("button", { onClick: () => openModal("provider-keys"), className: "w-full flex items-center px-5 py-3 text-sm font-medium text-gray-700 hover:bg-blue-50 hover:text-blue-700 transition-all group", children: [_jsx(KeyIcon, { className: "w-5 h-5 mr-3 text-gray-400 group-hover:text-blue-600 transition-colors" }), "Provider Keys"] }), _jsxs("button", { onClick: () => openModal("webhook"), className: "w-full flex items-center px-5 py-3 text-sm font-medium text-gray-700 hover:bg-blue-50 hover:text-blue-700 transition-all group", children: [_jsx(LinkIcon, { className: "w-5 h-5 mr-3 text-gray-400 group-hover:text-blue-600 transition-colors" }), "Campaign Notifications Webhook"] }), _jsxs("button", { onClick: () => openModal("twilio-credentials"), className: "w-full flex items-center px-5 py-3 text-sm font-medium text-gray-700 hover:bg-blue-50 hover:text-blue-700 transition-all group", children: [_jsx(Squares2X2Icon, { className: "w-5 h-5 mr-3 text-gray-400 group-hover:text-blue-600 transition-colors" }), "Update Twilio Credentials"] }), _jsxs("button", { onClick: () => openModal("auto-refill"), className: "w-full flex items-center px-5 py-3 text-sm font-medium text-gray-700 hover:bg-blue-50 hover:text-blue-700 transition-all group", children: [_jsx(SyncIcon, { className: "w-5 h-5 mr-3 text-gray-400 group-hover:text-blue-600 transition-colors" }), "Set Auto Refill Amount"] }), _jsxs("button", { onClick: handleNavigateToUsers, className: "w-full flex items-center px-5 py-3 text-sm font-medium text-gray-700 hover:bg-blue-50 hover:text-blue-700 transition-all group", children: [_jsx(UserGroupIcon, { className: "w-5 h-5 mr-3 text-gray-400 group-hover:text-blue-600 transition-colors" }), "Users"] }), _jsxs("button", { onClick: () => openModal("elevenlabs-credentials"), className: "w-full flex items-center px-5 py-3 text-sm font-medium text-gray-700 hover:bg-blue-50 hover:text-blue-700 transition-all group", children: [_jsx(BeakerIcon, { className: "w-5 h-5 mr-3 text-gray-400 group-hover:text-blue-600 transition-colors" }), "ElevenLabs Credentials"] }), _jsx("div", { className: "my-2 border-t border-gray-200" }), _jsxs("button", { onClick: handleLogout, className: "w-full flex items-center px-5 py-3 text-sm font-medium text-red-600 hover:bg-red-50 transition-all group", children: [_jsx(ArrowRightStartOnRectangleIcon, { className: "w-5 h-5 mr-3 text-red-400 group-hover:text-red-600 transition-colors" }), "Logout"] })] })] }))] })] })] }), _jsx("div", { className: "px-6 py-3 border-t border-gray-100", children: _jsx(Breadcrumb, {}) }), isSettingsMenuOpen && (_jsx("div", { className: "fixed inset-0 z-40", onClick: () => setIsSettingsMenuOpen(false) })), _jsx(ScheduleCallPausesModal, { isOpen: activeModal === "schedule-call-pauses", onClose: closeModal, isEnabled: isCallPausesEnabled, onToggle: setIsCallPausesEnabled }), _jsx(PaymentMethodsModal, { isOpen: activeModal === "payment-methods", onClose: closeModal }), _jsx(AddAccountBalanceModal, { isOpen: activeModal === "add-account-balance", onClose: closeModal }), _jsx(TransactionsModal, { isOpen: activeModal === "transactions", onClose: closeModal }), _jsx(SelectCRMModal, { isOpen: activeModal === "select-crm", onClose: closeModal }), _jsx(ProviderKeysModal, { isOpen: activeModal === "provider-keys", onClose: closeModal }), _jsx(WebhookModal, { isOpen: activeModal === "webhook", onClose: closeModal }), _jsx(TwilioCredentialsModal, { isOpen: activeModal === "twilio-credentials", onClose: closeModal }), _jsx(AutoRefillModal, { isOpen: activeModal === "auto-refill", onClose: closeModal }), _jsx(ElevenLabsCredentialsModal, { isOpen: activeModal === "elevenlabs-credentials", onClose: closeModal })] }));
};
export default Header;
